// <auto-generated />
using System;
using DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataBase.Migrations
{
    [DbContext(typeof(BloomDatabaseContext))]
    [Migration("20240405200026_addDOB")]
    partial class addDOB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DataBase.Models.AirtimePurchase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("APIResponse")
                        .HasColumnType("text");

                    b.Property<string>("AccountNo")
                        .HasColumnType("text");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DebitDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsReversed")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuccessful")
                        .HasColumnType("boolean");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<int>("StatusCode")
                        .HasColumnType("integer");

                    b.Property<string>("Telcos")
                        .HasColumnType("text");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AirtimePurchase");
                });

            modelBuilder.Entity("DataBase.Models.AuditTrails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Action")
                        .HasColumnType("text");

                    b.Property<string>("DateCreated")
                        .HasColumnType("text");

                    b.Property<string>("Ip")
                        .HasColumnType("text");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("boolean");

                    b.Property<string>("IsUser")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.Property<string>("UserIdentification")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AuditTrails");
                });

            modelBuilder.Entity("DataBase.Models.BankTransfer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccountNo")
                        .HasColumnType("text");

                    b.Property<string>("ApiResponse")
                        .HasColumnType("text");

                    b.Property<string>("ApiUrl")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DebitDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsReversed")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuccessful")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ReversalDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("StatusCode")
                        .HasColumnType("text");

                    b.Property<string>("TransactionRef")
                        .HasColumnType("text");

                    b.Property<string>("TransactionStatus")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BankTransfers");
                });

            modelBuilder.Entity("DataBase.Models.CableBillsPayment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("APIResponse")
                        .HasColumnType("text");

                    b.Property<string>("AccountNo")
                        .HasColumnType("text");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("BillType")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DebitDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsReversed")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuccessful")
                        .HasColumnType("boolean");

                    b.Property<string>("Package")
                        .HasColumnType("text");

                    b.Property<DateTime>("ReversalDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ServiceProvider")
                        .HasColumnType("text");

                    b.Property<string>("ServiceUrl")
                        .HasColumnType("text");

                    b.Property<string>("TranasactionRef")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CableBillsPayments");
                });

            modelBuilder.Entity("DataBase.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("AccountBalance")
                        .HasColumnType("numeric");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("text");

                    b.Property<string>("AccountType")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("BVN")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateDeactivated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateOnboarded")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("IdenitificationNumber")
                        .HasColumnType("text");

                    b.Property<string>("IdentificationType")
                        .HasColumnType("text");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text");

                    b.Property<string>("Region")
                        .HasColumnType("text");

                    b.Property<decimal>("TransactionLimit")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("DataBase.Models.CustomerTransactionToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccountNo")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Token")
                        .HasColumnType("text");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("CustomerTransactionTokens");
                });

            modelBuilder.Entity("DataBase.Models.DataPurchase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("APIResponse")
                        .HasColumnType("text");

                    b.Property<string>("AccountNo")
                        .HasColumnType("text");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DataPlan")
                        .HasColumnType("text");

                    b.Property<DateTime>("DebitDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsReversed")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuccessful")
                        .HasColumnType("boolean");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<int>("StatusCode")
                        .HasColumnType("integer");

                    b.Property<string>("Telcos")
                        .HasColumnType("text");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DataPurchase");
                });

            modelBuilder.Entity("DataBase.Models.OtherBankTransfers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccountNo")
                        .HasColumnType("text");

                    b.Property<string>("ApiResponse")
                        .HasColumnType("text");

                    b.Property<string>("ApiUrl")
                        .HasColumnType("text");

                    b.Property<int>("BankCode")
                        .HasColumnType("integer");

                    b.Property<string>("BankName")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DebitDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DuneApiResponse")
                        .HasColumnType("text");

                    b.Property<string>("DuneTransactionReference")
                        .HasColumnType("text");

                    b.Property<bool>("IsReversed")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuccessful")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ReversalDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("StatusCode")
                        .HasColumnType("text");

                    b.Property<string>("TransactionRef")
                        .HasColumnType("text");

                    b.Property<string>("TransactionStatus")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OtherBankTransfers");
                });

            modelBuilder.Entity("DataBase.Models.UserLogin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccountNo")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserLogin");
                });

            modelBuilder.Entity("DataBase.Models.UtitlityBillPayment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("APIResponse")
                        .HasColumnType("text");

                    b.Property<string>("AccountNo")
                        .HasColumnType("text");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("BillType")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DebitDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsReversed")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuccessful")
                        .HasColumnType("boolean");

                    b.Property<string>("Package")
                        .HasColumnType("text");

                    b.Property<DateTime>("ReversalDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ServiceProvider")
                        .HasColumnType("text");

                    b.Property<string>("ServiceUrl")
                        .HasColumnType("text");

                    b.Property<string>("Token")
                        .HasColumnType("text");

                    b.Property<string>("TranasactionRef")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UtitlityBillPayments");
                });
#pragma warning restore 612, 618
        }
    }
}
